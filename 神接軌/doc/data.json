{
    "project": {
        "name": "HTML5 Game Framework",
        "description": "HTML5 Game Framework for NTUT OOPLAB",
        "version": "1.2"
    },
    "files": {
        "src\\Audio.js": {
            "name": "src\\Audio.js",
            "modules": {},
            "classes": {
                "Audio": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Game.js": {
            "name": "src\\Game.js",
            "modules": {},
            "classes": {
                "Game": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\GameObject.js": {
            "name": "src\\GameObject.js",
            "modules": {},
            "classes": {
                "GameObject": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\KeyBoardManager.js": {
            "name": "src\\KeyBoardManager.js",
            "modules": {},
            "classes": {
                "KeyBoardManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Scene.js": {
            "name": "src\\Scene.js",
            "modules": {},
            "classes": {
                "Scene": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Sprite.js": {
            "name": "src\\Sprite.js",
            "modules": {},
            "classes": {
                "Sprite": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\animationSprite.js": {
            "name": "src\\animationSprite.js",
            "modules": {},
            "classes": {
                "AnimationSprite": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\gameMainMenu.js": {
            "name": "src\\gameMainMenu.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\level.js": {
            "name": "src\\level.js",
            "modules": {},
            "classes": {
                "Level": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Audio": {
            "name": "Audio",
            "shortname": "Audio",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\Audio.js",
            "line": 295,
            "description": "控管所有音樂資源的Class",
            "is_constructor": 1,
            "params": [
                {
                    "name": "playlist",
                    "description": "全部要被播放的音樂和音效清單",
                    "type": "Object"
                }
            ],
            "example": [
                "\n\tnew Framework.Audio({\n      horse: {\n          mp3: 'horse.mp3',\n          ogg: 'horse.ogg',\n          wav: 'horse.wav'\n      }, song1:{\n          mp3: 'song1.mp3',\n          ogg: 'song1.ogg',\n          wav: 'song1.wav'\n      }, song2:{\n          mp3: 'song2.mp3',\n          ogg: 'song2.ogg',\n          wav: 'song2.wav'\n      }\n  });"
            ]
        },
        "Game": {
            "name": "Game",
            "shortname": "Game",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\Game.js",
            "line": 5,
            "description": "整個遊戲(多個{{#crossLink \"Level\"}}{{/crossLink}})的主體\n主要功能為新增移除關卡與關卡的切換"
        },
        "GameObject": {
            "name": "GameObject",
            "shortname": "GameObject",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\GameObject.js",
            "line": 6,
            "description": "所有Sprite和Scene的Base Class, \n一般而言, 應該不會直接new它, 而是new其他的concrete class",
            "is_constructor": 1
        },
        "KeyBoardManager": {
            "name": "KeyBoardManager",
            "shortname": "KeyBoardManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\KeyBoardManager.js",
            "line": 94,
            "description": "管理KeyBoard所有的事件, 一般來說, 不會在此處處理相關邏輯\n而會在Level進行設定, 請參照\n{{#crossLink \"Level/keydown:event\"}}{{/crossLink}},\n{{#crossLink \"Level/keyup:event\"}}{{/crossLink}},"
        },
        "Scene": {
            "name": "Scene",
            "shortname": "Scene",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\Scene.js",
            "line": 6,
            "description": "可以用來盛裝多個GameObject的容器, 當該容器位移時, 其所屬的GameObject也會跟著改變",
            "is_constructor": 1,
            "extends": "GameObject",
            "example": [
                "\n    new Framework.Scene();\n"
            ]
        },
        "Sprite": {
            "name": "Sprite",
            "shortname": "Sprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\Sprite.js",
            "line": 6,
            "description": "可以用來繪製圖片的物件",
            "is_constructor": 1,
            "extends": "GameObject",
            "params": [
                {
                    "name": "filePath",
                    "description": "圖片路徑",
                    "type": "String"
                }
            ],
            "example": [
                "\n    new Framework.Sprite('clock.png');\n"
            ]
        },
        "AnimationSprite": {
            "name": "AnimationSprite",
            "shortname": "AnimationSprite",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\animationSprite.js",
            "line": 6,
            "description": "支援播放連續圖片的Sprite",
            "is_constructor": 1,
            "extends": "GameObject",
            "params": [
                {
                    "name": "options",
                    "description": "\noptions.url為要載入的圖片, 當url為一個Array時表示為零散的多張圖片, \n當為string時表示是一張大張的連續動作圖, \n故需要在提供大張連續圖的row和col. \noptions.speed可以設定這個Sprite播放的速度(fps), \noptions.loop 則可以設定這個Sprite是否需要不斷重複播放",
                    "type": "Object"
                }
            ],
            "example": [
                "\n    new Framework.AnimationSprite({url:['image1.png', 'image2.bmp']}); //多張圖片\n    new Framework.AnimationSprite({url:' bigImage.png', col: 10 , row: 7 , loop: true , speed: 6}); //只有一張大型的連續動作圖,speed和loop為非必要項\n"
            ]
        },
        "Level": {
            "name": "Level",
            "shortname": "Level",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\level.js",
            "line": 7,
            "description": "遊戲關卡的Class, 一個Game中可能有無數個Level\n(當然Game的開始和結束頁面也可以是一個Level)\n每個Level都會有 \n{{#crossLink \"Level/initializeProgressResource:method\"}}{{/crossLink}},\n{{#crossLink \"Level/loadingProgress:method\"}}{{/crossLink}},\n{{#crossLink \"Level/initialize:method\"}}{{/crossLink}},\n{{#crossLink \"Level/update:method\"}}{{/crossLink}},\n{{#crossLink \"Level/draw:method\"}}{{/crossLink}},\n五個基本的生命週期",
            "is_constructor": 1,
            "example": [
                "\n    new Framework.Level();\n"
            ]
        }
    },
    "classitems": [
        {
            "file": "src\\Audio.js",
            "line": 15,
            "description": "設定當音樂無法播放時, 要執行的callback",
            "itemtype": "method",
            "name": "setErrorEvent",
            "params": [
                {
                    "name": "errorEvent",
                    "description": "音樂無法播放時, 要執行的callback",
                    "type": "Function"
                }
            ],
            "example": [
                "\n\t\tsetErrorEvent(function() {\n\t\t\tconsole.log('error');\n\t\t}); "
            ],
            "class": "Audio"
        },
        {
            "file": "src\\Audio.js",
            "line": 68,
            "description": "播放音樂",
            "itemtype": "method",
            "name": "play",
            "params": [
                {
                    "name": "audioArgs",
                    "description": "audioArgs.name為必要項,\n 並且需要可以從Constuctor提供的清單上找到, 否則會throw exception\n audioArgs可以加入任何一個W3C定義的option參數, 詳細請參考W3C網站\n http://www.w3schools.com/tags/tag_audio.asp",
                    "type": "Object"
                }
            ],
            "example": [
                " \n     play({name: 'horse'}); \n     play({name: 'horse', loop: true}); "
            ],
            "class": "Audio"
        },
        {
            "file": "src\\Audio.js",
            "line": 121,
            "description": "暫停被播放音樂",
            "itemtype": "method",
            "name": "pause",
            "params": [
                {
                    "name": "audioName",
                    "description": "歌曲的name",
                    "type": "String"
                }
            ],
            "example": [
                " \n    pause('horse');  "
            ],
            "class": "Audio"
        },
        {
            "file": "src\\Audio.js",
            "line": 133,
            "description": "暫停全部被播放音樂",
            "itemtype": "method",
            "name": "pauseAll",
            "example": [
                " \n    pauseAll();  "
            ],
            "class": "Audio"
        },
        {
            "file": "src\\Audio.js",
            "line": 145,
            "description": "恢復播放被暫停的音樂, 若沒有被暫停, 則不會發生任何事情",
            "itemtype": "method",
            "name": "resume",
            "params": [
                {
                    "name": "audioName",
                    "description": "歌曲的name\n    resume('horse');",
                    "type": "String"
                }
            ],
            "class": "Audio"
        },
        {
            "file": "src\\Audio.js",
            "line": 158,
            "description": "恢復播放被暫停的所有音樂",
            "itemtype": "method",
            "name": "resumeAll",
            "example": [
                " \n    resumeAll();  "
            ],
            "class": "Audio"
        },
        {
            "file": "src\\Audio.js",
            "line": 170,
            "description": "停止被播放音樂",
            "itemtype": "method",
            "name": "stop",
            "params": [
                {
                    "name": "audioName",
                    "description": "歌曲的name",
                    "type": "String"
                }
            ],
            "example": [
                " \n    stop('horse');  "
            ],
            "class": "Audio"
        },
        {
            "file": "src\\Audio.js",
            "line": 184,
            "description": "停止所有被播放音樂",
            "itemtype": "method",
            "name": "stopAll",
            "example": [
                " \n    stopAll();  "
            ],
            "class": "Audio"
        },
        {
            "file": "src\\Audio.js",
            "line": 196,
            "description": "設定音樂的音量",
            "itemtype": "method",
            "name": "setVolume",
            "params": [
                {
                    "name": "audioName",
                    "description": "歌曲的name",
                    "type": "String"
                },
                {
                    "name": "volumeValue",
                    "description": "要設定的音量大小 0-1之間",
                    "type": "Number"
                }
            ],
            "example": [
                " \n\tsetVolume('horse', 0);\t//沒聲音 \n\tsetVolume('horse', 0.5);  \n\tsetVolume('horse', 1);\t//最大聲"
            ],
            "class": "Audio"
        },
        {
            "file": "src\\Audio.js",
            "line": 217,
            "description": "開起音樂的音效",
            "itemtype": "method",
            "name": "openVolume",
            "params": [
                {
                    "name": "audioName",
                    "description": "歌曲的name",
                    "type": "String"
                }
            ],
            "example": [
                " \n    openVolume('horse');\t"
            ],
            "class": "Audio"
        },
        {
            "file": "src\\Audio.js",
            "line": 228,
            "description": "開起所有音樂的音效",
            "itemtype": "method",
            "name": "openVolumeAll",
            "example": [
                " \n    openVolumeAll();\t"
            ],
            "class": "Audio"
        },
        {
            "file": "src\\Audio.js",
            "line": 240,
            "description": "關閉音樂的音效(靜音)",
            "itemtype": "method",
            "name": "mute",
            "params": [
                {
                    "name": "audioName",
                    "description": "歌曲的name",
                    "type": "String"
                }
            ],
            "example": [
                " \n    mute('horse');\t"
            ],
            "class": "Audio"
        },
        {
            "file": "src\\Audio.js",
            "line": 251,
            "description": "關閉所有音樂的音效(靜音所有歌曲)",
            "itemtype": "method",
            "name": "muteAll",
            "example": [
                " \n    muteAll();\t"
            ],
            "class": "Audio"
        },
        {
            "file": "src\\Game.js",
            "line": 179,
            "description": "加入一個新的關卡",
            "itemtype": "method",
            "name": "addNewLevel",
            "static": 1,
            "params": [
                {
                    "name": "levelData",
                    "description": "{ 關卡名稱: 關卡的instance }",
                    "type": "Object"
                }
            ],
            "example": [
                "\n\tFramework.Game.addNewLevel({menu: new MyMenu()});\t//MyMen繼承自Level"
            ],
            "class": "Game"
        },
        {
            "file": "src\\Game.js",
            "line": 201,
            "description": "前往另一個關卡(前後皆可), 若沒有該關卡, 會throw exception",
            "itemtype": "method",
            "name": "goToLevel",
            "static": 1,
            "params": [
                {
                    "name": "levelName",
                    "description": "關卡名稱",
                    "type": "Object"
                }
            ],
            "example": [
                "\n\tFramework.Game.goToLevel('menu');"
            ],
            "class": "Game"
        },
        {
            "file": "src\\Game.js",
            "line": 220,
            "description": "前往下一個關卡, 若沒有下一個關卡, 會throw exception",
            "itemtype": "method",
            "name": "goToNextLevel",
            "static": 1,
            "example": [
                "\n\tFramework.Game.goToNextLevel();"
            ],
            "class": "Game"
        },
        {
            "file": "src\\Game.js",
            "line": 245,
            "description": "前往前一個關卡, 若沒有前一個關卡, 會throw exception",
            "itemtype": "method",
            "name": "goToPreviousLevel",
            "static": 1,
            "example": [
                "\n\tFramework.Game.goToPreviousLevel();"
            ],
            "class": "Game"
        },
        {
            "file": "src\\Game.js",
            "line": 273,
            "description": "讓遊戲開始執行",
            "itemtype": "method",
            "name": "start",
            "static": 1,
            "example": [
                "\n\tFramework.Game.start();"
            ],
            "class": "Game"
        },
        {
            "file": "src\\Game.js",
            "line": 451,
            "class": "Game"
        },
        {
            "file": "src\\Game.js",
            "line": 517,
            "description": "讓任何一個在網頁上的元件得以全螢幕, 一定要在有使用者可以觸發的事件內撰寫, 例如: \n{{#crossLink \"Level/click:event\"}}{{/crossLink}},\n{{#crossLink \"Level/mousedown:event\"}}{{/crossLink}},\n{{#crossLink \"Level/mouseup:event\"}}{{/crossLink}},\n{{#crossLink \"Level/mousemove:event\"}}{{/crossLink}},\n{{#crossLink \"Level/touchstart:event\"}}{{/crossLink}},\n{{#crossLink \"Level/touchmove:event\"}}{{/crossLink}},\n{{#crossLink \"Level/keydown:event\"}}{{/crossLink}},\n{{#crossLink \"Level/keyup:event\"}}{{/crossLink}}\n否則會無法全螢幕",
            "itemtype": "method",
            "name": "fullScreen",
            "params": [
                {
                    "name": "ele",
                    "description": "要被全螢幕的DOM, 若不設定則為遊戲的CANVAS",
                    "type": "Object"
                }
            ],
            "static": 1,
            "example": [
                "\n\tFramework.Game.fullScreen();"
            ],
            "class": "Game"
        },
        {
            "file": "src\\Game.js",
            "line": 554,
            "description": "退出全螢幕",
            "itemtype": "method",
            "name": "exitFullScreen",
            "static": 1,
            "example": [
                "\n\tFramework.Game.exitFullScreen();"
            ],
            "class": "Game"
        },
        {
            "file": "src\\GameObject.js",
            "line": 51,
            "description": "相對位置的getter/setter",
            "itemtype": "property",
            "name": "position",
            "type": "{Object}",
            "default": "{ x: 0, y: 0 }",
            "class": "GameObject"
        },
        {
            "file": "src\\GameObject.js",
            "line": 67,
            "description": "相對旋轉角度的getter/setter",
            "itemtype": "property",
            "name": "rotation",
            "type": "{number}",
            "default": "0",
            "class": "GameObject"
        },
        {
            "file": "src\\GameObject.js",
            "line": 83,
            "description": "相對放大縮小的getter/setter",
            "itemtype": "property",
            "name": "scale",
            "type": "{number}",
            "default": "1",
            "class": "GameObject"
        },
        {
            "file": "src\\GameObject.js",
            "line": 99,
            "description": "絕對寬度的getter/setter",
            "itemtype": "property",
            "name": "width",
            "type": "{number}",
            "default": "0",
            "class": "GameObject"
        },
        {
            "file": "src\\GameObject.js",
            "line": 118,
            "description": "絕對寬度的getter/setter",
            "itemtype": "property",
            "name": "height",
            "type": "{number}",
            "default": "0",
            "class": "GameObject"
        },
        {
            "file": "src\\GameObject.js",
            "line": 148,
            "description": "絕對位置左上角的getter",
            "itemtype": "property",
            "name": "upperLeft",
            "type": "{number}",
            "default": "0",
            "readonly": "",
            "class": "GameObject"
        },
        {
            "file": "src\\GameObject.js",
            "line": 166,
            "description": "絕對位置右上角的getter",
            "itemtype": "property",
            "name": "upperRight",
            "type": "{number}",
            "default": "0",
            "readonly": "",
            "class": "GameObject"
        },
        {
            "file": "src\\GameObject.js",
            "line": 184,
            "description": "絕對位置左下角的getter",
            "itemtype": "property",
            "name": "lowerLeft",
            "type": "{number}",
            "default": "0",
            "readonly": "",
            "class": "GameObject"
        },
        {
            "file": "src\\GameObject.js",
            "line": 202,
            "description": "絕對位置右下角的getter",
            "itemtype": "property",
            "name": "lowerRight",
            "type": "{number}",
            "default": "0",
            "readonly": "",
            "class": "GameObject"
        },
        {
            "file": "src\\KeyBoardManager.js",
            "line": 58,
            "description": "設定需要多久清除一次曾被按壓過key的紀錄, 預設值為一秒\n該設定與 {{#crossLink \"Level/keyup:event\"}}{{/crossLink}} 有關",
            "itemtype": "method",
            "name": "setClearHistoryTime",
            "static": 1,
            "params": [
                {
                    "name": "userClearHistoryTime",
                    "description": "需要多久清除一次曾被按壓過key的紀錄",
                    "type": "Number"
                }
            ],
            "class": "KeyBoardManager"
        },
        {
            "file": "src\\Scene.js",
            "line": 49,
            "description": "將一個Object放進Scene中, 使其可以跟著連動",
            "itemtype": "method",
            "name": "attach",
            "params": [
                {
                    "name": "target",
                    "description": "必須是具有update和draw的物件, \n若不符合規定會throw exception",
                    "type": "Object"
                }
            ],
            "example": [
                " \n    var sprite = new Framework.Sprite('clock.jpg'),\n        scene = new Framework.Scene();\n    sprite.position = { x: 100, y: 100 };\n    scene.position = { x: 100, y: 100 };\n    scene.attach(sprite);     //如此則Sprite的絕對位置會是在(200, 200)"
            ],
            "class": "Scene"
        },
        {
            "file": "src\\Scene.js",
            "line": 88,
            "description": "將一個Object移開Scene中, 使其不再跟著連動",
            "itemtype": "method",
            "name": "detach",
            "params": [
                {
                    "name": "target",
                    "description": "已經被attach的物件",
                    "type": "Object"
                }
            ],
            "example": [
                " \n    detach(spriteInstace);"
            ],
            "class": "Scene"
        },
        {
            "file": "src\\animationSprite.js",
            "line": 117,
            "description": "開始播放設定好的AnimationSprite",
            "itemtype": "method",
            "name": "start",
            "params": [
                {
                    "name": "options",
                    "description": "options.from和options.to表示要從第幾張播放到第幾張, \n 若to < from表示要倒著播放, 可以在此設定要被播放的速度和是否重複播放,\n finishPlaying可以設定播放完畢後是否要有callback\n (loop: true時, 此callback永遠不會被執行)",
                    "type": "Object"
                }
            ],
            "example": [
                " \n     start({from:3, to: 5}); //從第三張圖片播放到第五張\n     start({from:6, to: 1}); //倒著從第六張圖片播放到第一張\n     start({from:6, to: 1, loop: false, speed: 1, finishPlaying: function(){\n         console.log('finish');\n     }});"
            ],
            "class": "AnimationSprite"
        },
        {
            "file": "src\\animationSprite.js",
            "line": 154,
            "description": "停止播放AnimationSprite, 若已經停止, 則不會發生任何事情",
            "itemtype": "method",
            "name": "stop",
            "class": "AnimationSprite"
        },
        {
            "file": "src\\animationSprite.js",
            "line": 162,
            "description": "繼續播放AnimationSprite, 若未曾停止, 則不會發生任何事情",
            "itemtype": "method",
            "name": "resume",
            "class": "AnimationSprite"
        },
        {
            "file": "src\\gameMainMenu.js",
            "line": 1,
            "description": "Created by Raccoon on 2014/1/24.",
            "class": "Level"
        },
        {
            "file": "src\\level.js",
            "line": 24,
            "description": "每個Level一定會有一個rootScene, \n建議所有的GameObject都應該要attach到rootScene上",
            "itemtype": "property",
            "name": "rootScene",
            "type": "Scene",
            "class": "Level"
        },
        {
            "file": "src\\level.js",
            "line": 57,
            "description": "初始化loadingProgress事件中會用到的圖片素材, \n建議降低此處要載入的圖片數量, 主要Game要用的圖片可以等到initialize再載入",
            "itemtype": "method",
            "name": "initializeProgressResource",
            "class": "Level"
        },
        {
            "file": "src\\level.js",
            "line": 65,
            "description": "在載入圖片資源時, 要被繪製的畫面, 當不設定時, 會有預設的顯示畫面\n若不想要有該畫面, 可以override一個空的function",
            "params": [
                {
                    "name": "context",
                    "description": "用來繪製的工具",
                    "type": "Object"
                },
                {
                    "name": "requestInfo",
                    "description": "requestInfo.requset為發送request的數量, \nrequestInfo.response為已經有response的數量\nrequestInfo.percent為已完成的百分比",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "loadingProgress",
            "class": "Level"
        },
        {
            "file": "src\\level.js",
            "line": 79,
            "description": "初始化整個Level, 並載入所有圖片資源",
            "itemtype": "method",
            "name": "initialize",
            "class": "Level"
        },
        {
            "file": "src\\level.js",
            "line": 86,
            "description": "用來撰寫遊戲邏輯, 不會去處理繪製的工作\n第一行必須撰寫 this.rootScene.update();",
            "itemtype": "method",
            "name": "update",
            "class": "Level"
        },
        {
            "file": "src\\level.js",
            "line": 94,
            "description": "用來繪製需要被繪製的GameObject\n第一行必須撰寫 this.rootScene.draw(context);",
            "params": [
                {
                    "name": "context",
                    "description": "用來繪製的工具",
                    "type": "Object"
                }
            ],
            "itemtype": "method",
            "name": "draw",
            "class": "Level"
        },
        {
            "file": "src\\level.js",
            "line": 103,
            "description": "處理點擊的事件, 當mousedown + mouseup 都成立時才會被觸發",
            "itemtype": "event",
            "name": "click",
            "params": [
                {
                    "name": "e",
                    "description": "事件的參數, 會用到的應該是e.x和e.y兩個參數,\n表示的是目前點擊的絕對位置",
                    "type": "Object"
                }
            ],
            "class": "Level"
        },
        {
            "file": "src\\level.js",
            "line": 112,
            "description": "處理滑鼠點下的事件",
            "itemtype": "event",
            "name": "mousedown",
            "params": [
                {
                    "name": "e",
                    "description": "事件的參數, 會用到的應該是e.x和e.y兩個參數,\n表示的是目前點擊的絕對位置",
                    "type": "Object"
                }
            ],
            "class": "Level"
        },
        {
            "file": "src\\level.js",
            "line": 121,
            "description": "處理滑鼠放開的事件",
            "itemtype": "event",
            "name": "mouseup",
            "params": [
                {
                    "name": "e",
                    "description": "事件的參數, 會用到的應該是e.x和e.y兩個參數,\n表示的是目前放開的絕對位置",
                    "type": "Object"
                }
            ],
            "class": "Level"
        },
        {
            "file": "src\\level.js",
            "line": 130,
            "description": "處理滑鼠移動的事件(不論是否有點下, 都會觸發該事件)",
            "itemtype": "event",
            "name": "mousemove",
            "params": [
                {
                    "name": "e",
                    "description": "事件的參數, 會用到的應該是e.x和e.y兩個參數,\n表示的是目前滑鼠的絕對位置",
                    "type": "Object"
                }
            ],
            "class": "Level"
        },
        {
            "file": "src\\level.js",
            "line": 139,
            "description": "處理觸控到螢幕時的事件, 若是在一般電腦上跑, 是不會觸發此事件的\n(除非使用debugger模擬, https://developers.google.com/chrome-developer-tools/docs/mobile-emulation?hl=zh-TW)",
            "itemtype": "event",
            "name": "touchstart",
            "params": [
                {
                    "name": "e",
                    "description": "事件的參數, \n會用到的應該是e.touches[0].clientX和e.touches[0].clientY兩個參數,\n表示的是目前觸控到的位置",
                    "type": "Object"
                }
            ],
            "class": "Level"
        },
        {
            "file": "src\\level.js",
            "line": 152,
            "description": "處理觸控到螢幕並移動時的事件, 若是在一般電腦上跑, 是不會觸發此事件的\n(除非使用debugger模擬, https://developers.google.com/chrome-developer-tools/docs/mobile-emulation?hl=zh-TW)",
            "itemtype": "event",
            "name": "touchmove",
            "params": [
                {
                    "name": "e",
                    "description": "事件的參數, \n會用到的應該是e.touches[0].clientX和e.touches[0].clientY兩個參數,\n表示的是目前最新觸控到的位置",
                    "type": "Object"
                }
            ],
            "class": "Level"
        },
        {
            "file": "src\\level.js",
            "line": 163,
            "description": "處理鍵盤被壓下按鈕的事件",
            "itemtype": "event",
            "name": "keydown",
            "params": [
                {
                    "name": "e",
                    "description": "改寫過後的事件的參數表示按下去的最後一個鍵, 其包含有\naltKey, ctrlKey, shiftKey表示是否按下的狀態,\nfirstTimeStamp 表示剛按下去這個按鈕的時間, \nkey 存的是按下去的鍵的string, \nlastTimeDiff 則為剛按下這個鍵到目前有多久了",
                    "type": "Object"
                },
                {
                    "name": "list",
                    "description": "目前按下去所有可以被偵測到的鍵",
                    "type": "Object"
                },
                {
                    "name": "oriE",
                    "description": "W3C定義的事件的e\n表示的是目前最新觸控到的位置",
                    "type": "Object"
                }
            ],
            "example": [
                "\n    \n    keydown: function(e, list) {\n        if(e.key === 'A' && e.key.lastTimeDiff > 3000) {\n            console.log('A');     //當A按下超過3秒, 才會印出A\n        } \n        if(list.A && list.B) {\n            console.log('A+B');   //當A和B都被按下時, 才會印出A+B\n        }\n    }         \n    //FYI: 每個真正的keyCode與相對應的string\n    _keyCodeToChar = {\n        8:'Backspace',9:'Tab',13:'Enter',\n        16:'shiftKey',17:'ctrlKey',18:'altKey',19:'Pause/Break',\n        20:'Caps Lock',27:'Esc',32:'Space',33:'Page Up',34:'Page Down',\n        35:'End',36:'Home',37:'Left',38:'Up',39:'Right',40:'Down',\n        45:'Insert',46:'Delete',48:'0',49:'1',50:'2',51:'3',52:'4',\n        53:'5',54:'6',55:'7',56:'8',57:'9',65:'A',66:'B',67:'C',\n        68:'D',69:'E',70:'F',71:'G',72:'H',73:'I',74:'J',75:'K',\n        76:'L',77:'M',78:'N',79:'O',80:'P',81:'Q',82:'R',83:'S',\n        84:'T',85:'U',86:'V',87:'W',88:'X',89:'Y',90:'Z',91:'Windows',\n        93:'Right Click',96:'Numpad 0',97:'Numpad 1',98:'Numpad 2',\n        99:'Numpad 3',100:'Numpad 4',101:'Numpad 5',102:'Numpad 6',\n        103:'Numpad 7',104:'Numpad 8',105:'Numpad 9',106:'Numpad *',\n        107:'Numpad +',109:'Numpad -',110:'Numpad .',111:'Numpad /',\n        112:'F1',113:'F2',114:'F3',115:'F4',116:'F5',117:'F6',118:'F7',\n        119:'F8',120:'F9',121:'F10',122:'F11',123:'F12',144:'Num Lock',\n        145:'Scroll Lock',182:'My Computer',\n        183:'My Calculator',186:';',187:'=',188:',',189:'-',\n        190:'.',191:'/',192:'`',219:'[',220:'\\\\',221:']',222:'\\''\n    };\n    "
            ],
            "class": "Level"
        },
        {
            "file": "src\\level.js",
            "line": 210,
            "description": "處理鍵盤被壓下按鈕的事件, 除了W3C定義的參數外, \nFramework尚支援進階的功能history",
            "itemtype": "event",
            "name": "keyup",
            "params": [
                {
                    "name": "e",
                    "description": "原生的事件參數",
                    "type": "Object"
                },
                {
                    "name": "history",
                    "description": "儲存最近幾秒內keyup的按鍵 \n(可以用來處理類似小朋友齊打交, 發動攻擊技能的Scenario)\nhistory可以設定多久清除一次, 請參考 \n{{#crossLink \"KeyBoardManager/setClearHistoryTime:method\"}}{{/crossLink}}",
                    "type": "Object"
                }
            ],
            "example": [
                "\n    keyup: function(e, history) {\n        var right = history.length >= 3, i;\n        if (history.length > 2) {\n            for (i = 3; i > 0; i--) {\n                right = right && (history[history.length - i].key === 'Right');\n            }\n        }\n        if (right) {\n            console.log(right);   //當一秒內按了右鍵超過3次, 才會印出true\n        }\n    },"
            ],
            "class": "Level"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type",
            "line": " src\\Game.js:451"
        },
        {
            "message": "Missing item type\nCreated by Raccoon on 2014/1/24.",
            "line": " src\\gameMainMenu.js:1"
        }
    ]
}