// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Npc = (function(_super) {
    __extends(Npc, _super);

    function Npc(name, sprite, map, x, y, range_x, range_y) {
      this.name = name;
      this.sprite = sprite;
      this.map = map;
      this.range_x = range_x;
      this.range_y = range_y;
      if (this.range_x == null) {
        this.range_x = -1;
        this.range_y = -1;
      }
      Npc.__super__.constructor.call(this, this.name, this.sprite);
      this.position = [x, y];
      game.maps.data[this.map].npc.push(this);
      this.map = game.maps.data[this.map];
      this.mission_manager = game.role.mission_manager;
      this.windows_manager = game.windows_manager;
      this.items = [];
      this.init();
    }

    Npc.prototype.init = function() {
      this.hp = -1;
      this.node = null;
      return this.optionIndex = 0;
    };

    Npc.prototype.talkStart = function() {
      var reverse_dir, sign;
      sign = dir2sign(this.dir);
      reverse_dir = sign2dir(sign[0] * -1, sign[1] * -1);
      if (game.role.dir === reverse_dir && game.role.position[0] === this.position[0] + sign[0] && game.role.position[1] === this.position[1] + sign[1]) {
        this.win = new Windows(300, 100, '對話', this);
        this.win.next_button.show();
        return this.start();
      }
    };

    Npc.prototype.touch = function() {};

    Npc.prototype.talk = function() {
      this.win.clearOption();
      return this.win.node.call(this);
    };

    Npc.prototype.next = function(node) {
      this.node = node;
      this.win.node = this.node;
      return this.win.next_button.addEvent(this.talk, this);
    };

    Npc.prototype.close = function() {
      game.role.talking = 0;
      game.role.npc = null;
      if (this.win) {
        this.win.close();
      }
      return this.win = null;
    };

    Npc.prototype.option = function(name, fn) {
      this.win.addOption(name, fn, this);
      return this.optionIndex = 0;
    };

    Npc.prototype.selectOptions = function(path) {
      if (path === 'top') {
        this.optionIndex--;
      } else if (path === 'down') {
        this.optionIndex++;
      }
      return this.optionIndex = this.win.select(this.optionIndex);
    };

    Npc.prototype.mes = function(msg) {
      return this.win.setMsg(msg);
    };

    Npc.prototype.addMission = function(mission) {
      return game.role.mission_manager.addMission(mission);
    };

    Npc.prototype.addShopItem = function(props) {
      return this.items.push(props);
    };

    Npc.prototype.viewShop = function() {
      var block, buy, cancel, i, item, key, label, price, that, _i, _j, _len, _ref;
      this.win.close();
      this.win = new Windows(350, 400, '商品');
      for (i = _i = 0; _i <= 49; i = ++_i) {
        block = new Block('');
        block.appendTo(this.win.main);
        block.addClass("shop-item");
      }
      that = this;
      _ref = this.items;
      for (key = _j = 0, _len = _ref.length; _j < _len; key = ++_j) {
        item = _ref[key];
        block = this.win.main.childrens[key];
        label = new Label;
        label.html.style.backgroundImage = "url(images/" + item.icon + ")";
        label.html.style.backgroundSize = "auto 100%";
        label.html.style.backgroundPosition = "center";
        label.html.style.backgroundRepeat = "no-repeat";
        label.html.style.width = "100%";
        label.html.style.height = "100%";
        label.appendTo(block);
        price = $("<div>").html(item.price).css("position", "absolute").css("right", "3px").css("bottom", "0px");
        $(block.html).append(price);
        label.addEvent('dblclick', function() {
          return this.showBuyAmount();
        }, item);
        label.addEvent('click', function() {
          $(".shop-item").removeAttr("id");
          return $(this.html).attr("id", "shop-select");
        }, block);
      }
      buy = new Button("購買");
      cancel = new Button("取消");
      cancel.addEvent(this.talk, this);
      buy.addEvent(function() {
        var event;
        label = document.getElementById('shop-select').getElementsByClassName('label')[0];
        event = document.createEvent('Event');
        event.initEvent('dblclick', true, true);
        label.dispatchEvent(event);
      }, this);
      this.win.main.html.style.paddingBottom = "0px";
      this.win.main.html.style.marginBottom = "40px";
      this.win.footer.html.style.backgroundColor = "#FFF";
      cancel.html.style.marginRight = "20px";
      buy.html.style.marginRight = "10px";
      cancel.appendTo(this.win.footer);
      return buy.appendTo(this.win.footer);
    };

    return Npc;

  })(window.Animate);

}).call(this);
