// Generated by CoffeeScript 1.7.1
(function() {
  window.KeyManager = (function() {
    function KeyManager() {
      this.keys = [];
      this.win = null;
      this.keys_list = [["`", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-", "=", "Backspace"], ["Tab", "Q", "W", "E", "R", "T", "Y", "U", "I", "O", "P", "[", "]", "\\"], ["Caps Lock", "A", "S", "D", "F", "G", "H", "J", "K", "L", ";", "'", "Enter"], ["Shift", "Z", "X", "C", "V", "B", "N", "M", ",", ".", "/", "Shift", "Top"], ["Ctrl", "Alt", "Space", "Alt", "Ctrl", "Left", "Down", "Right"]];
    }

    KeyManager.prototype.createKeyBoard = function() {
      var b, k, keys_row, row, v, _i, _len, _ref;
      this.win = new Windows(1100, 335, "快捷鍵設定");
      this.win.main.html.style.overflowY = "hidden";
      _ref = this.keys_list;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        keys_row = _ref[_i];
        row = new Row;
        for (k in keys_row) {
          v = keys_row[k];
          if (typeof v !== "function") {
            b = new Block(v);
          }
          b.addClass("keyboard");
          switch (v) {
            case "Backspace":
              b.html.style.width = "100px";
              break;
            case "Tab":
              b.html.style.width = "80px";
              break;
            case "\\":
              b.html.style.width = "76px";
              break;
            case "Caps Lock":
              b.html.style.width = "101px";
              break;
            case "Enter":
              b.html.style.width = "120px";
              break;
            case "Shift":
              b.html.style.width = "143px";
              break;
            case "Ctrl":
              b.html.style.width = "90px";
              break;
            case "Alt":
              b.html.style.width = "80px";
              break;
            case "Space":
              b.html.style.width = "510px";
          }
          b.appendTo(row);
        }
        row.appendTo(this.win.main);
      }
      this.win.hide();
    };

    KeyManager.prototype.show = function() {
      if (this.win === null) {
        this.createKeyBoard();
      }
      if (this.win.isHide()) {
        return this.win.show();
      } else {
        return this.win.hide();
      }
    };

    return KeyManager;

  })();

}).call(this);
