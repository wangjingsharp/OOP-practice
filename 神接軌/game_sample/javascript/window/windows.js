// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.Windows = (function(_super) {
    __extends(Windows, _super);

    function Windows(width, height, name) {
      var close, that, win;
      this.width = width;
      this.height = height;
      this.name = name;
      this.windows_manager = game.windows_manager;
      if (win = this.windows_manager.findWindow(this.name)) {
        win.setMsg('');
        return win;
      }
      Windows.__super__.constructor.call(this, 'win');
      this.focus = false;
      this.title = new Row('', 'title');
      this.title.appendTo(this);
      if (name == null) {
        this.title.setHeight(20);
      }
      if (name != null) {
        this.setTitle(name);
      }
      that = this;
      close = $("<div>");
      close.css("position", "absolute").css("bottom", "0").css("right", "0").css("color", "#FFF").css("background-image", "url(images/icon/close.png)").css("height", "20px").css("width", "20px").css("background-repeat", "no-repeat").css("cursor", "url(images/cursor/worldmap_cursor.png)");
      close.on("click", function(e) {
        return that.hide();
      });
      $(this.title.html).css("position", "relative").append(close);
      this.title.addEvent('mousedown', this.dragStart, this);
      document.body.addEventListener('mousemove', function() {
        return that.dragMove.call(that);
      });
      this.title.addEvent('mouseup', this.dragEnd, this);
      this.html.style.left = (window.innerWidth / 2) + "px";
      this.html.style.top = (window.innerHeight / 2) + "px";
      this.html.style.marginLeft = -(this.width / 2) + "px";
      this.html.style.marginTop = -(this.height / 2) + "px";
      this.addEvent('mousedown', this.focusWindow);
      this.main = new Main;
      this.main.html.style.width = "" + this.width + "px";
      this.main.html.style.height = "" + this.height + "px";
      this.main.appendTo(this);
      this.footer = new Row('', 'footer');
      this.footer.appendTo(this);
      this.next_button = new Button('next');
      this.next_button.appendTo(this.footer);
      this.next_button.hide();
      this.node = null;
      this.options = [];
      this.selectIndex = 0;
      this.offset = [];
      this.draging = false;
      this.windows_manager.addWindow(this);
      this.focusWindow();
      document.body.appendChild(this.html);
    }

    Windows.prototype.show = function() {
      Windows.__super__.show.call(this);
      return this.focusWindow();
    };

    Windows.prototype.close = function() {
      this.windows_manager.removeWindow(this);
      return this.html.remove();
    };

    Windows.prototype.focusWindow = function() {
      return this.windows_manager.setFocusWindow(this);
    };

    Windows.prototype.dragStart = function(e) {
      if (e == null) {
        e = window.event;
      }
      if ($(e.target).hasClass('title')) {
        this.html.style.opacity = .5;
        this.draging = true;
        return this.offset = [e.offsetX + 3, e.offsetY + 3];
      }
    };

    Windows.prototype.dragMove = function(e) {
      var mouseX, mouseY;
      if (!this.draging) {
        return;
      }
      if (e == null) {
        e = window.event;
      }
      document.body.className = 'select-close';
      mouseX = e.clientX;
      mouseY = e.clientY;
      this.html.style.marginLeft = 0;
      this.html.style.marginTop = 0;
      this.html.style.left = (Number(mouseX) - Number(this.offset[0])) + "px";
      return this.html.style.top = (Number(mouseY) - Number(this.offset[1])) + "px";
    };

    Windows.prototype.dragEnd = function(e) {
      this.draging = false;
      return this.html.style.opacity = 1;
    };

    Windows.prototype.setTitle = function(title) {
      return this.title.setMsg(title);
    };

    Windows.prototype.setMsg = function(msg) {
      return this.main.setMsg(msg);
    };

    Windows.prototype.addOption = function(msg, node, that) {
      var option;
      this.msg = msg;
      this.next_button.hide();
      option = new Options(this.msg, node, that, this);
      $(option.html).data("idx", this.options.length);
      option.appendTo(this.main);
      this.options.push(option);
      this.node = this.options[0].node;
      return option;
    };

    Windows.prototype.clearOption = function() {
      this.next_button.show();
      return this.options = [];
    };

    Windows.prototype.select = function(selectIndex) {
      var option, _i, _len, _ref;
      if (this.options.length <= 0) {
        return;
      }
      _ref = this.options;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        option = _ref[_i];
        option.removeClass('active');
      }
      if (selectIndex >= this.options.length) {
        selectIndex = this.options.length - 1;
      }
      if (selectIndex < 0) {
        selectIndex = 0;
      }
      this.node = this.options[selectIndex].node;
      this.options[selectIndex].addClass('active');
      return selectIndex;
    };

    return Windows;

  })(BaseWindow);

}).call(this);
